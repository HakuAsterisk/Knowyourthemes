@page "/UserAccount"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@using System.Text.Json;
@inject AnimeSongService AnimeSongService
@using GuessTheBeat.Components.Models;

@code {
    private List<AnimeNode> animeList = new List<AnimeNode>();
    private List<GuessTheBeat.Components.Services.AnimeInfo> aniList = new List<GuessTheBeat.Components.Services.AnimeInfo>();
    private List<int> idList = new List<int>();
    private bool isLoading = true;
    private string username; // Property to hold the username input

        //---------------MYANIMELIST-----------------
    private async Task FetchMalAnimeList()
    {
        if (string.IsNullOrWhiteSpace(username))
        {
            //handle empty input
            Console.WriteLine("Username cannot be empty.");
            return;
        }

        isLoading = true;

        try
        {
            animeList = await AnimeSongService.GetMediaListAsync(username);
        }
        catch (Exception ex)
        {
            // Handle the error
            Console.WriteLine($"Error fetching anime list: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    //---------------ANILIST-----------------
    private async Task FetchAniList()
    {
        if (string.IsNullOrWhiteSpace(username))
        {
            //Handle empty input
            Console.WriteLine("Username cannot be empty.");
            return;
        }

        isLoading = true;

        try
        {
            aniList = await AnimeSongService.GetAniListAsync(username);
        }
        catch (Exception ex)
        {
            //Handle the error
            Console.WriteLine($"Error fetching anime list: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

}

<div>
    <h3>Anime List</h3>

    <input type="text" @bind="username" placeholder="Enter username" /><br>
    <div></div><br>
    <button @onclick="FetchMalAnimeList">MyAnimeList Account</button>
    <button @onclick="FetchAniList">AniList Account</button>

    @if (isLoading)
    {
        <p>Loading...</p>
    }
    else if (animeList.Count != 0 && idList.Count == 0)
    {
        <p>MyAnimeList account loaded!</p>
    }
    else if (animeList.Count == 0 && idList.Count != 0)
    {
        <p>AniList account loaded!</p>
    } 
    else 
    {
        <p>Could not find that account...</p>
    }
</div>