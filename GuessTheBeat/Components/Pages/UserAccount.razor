@page "/UserAccount"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@using System.Text.Json;
@inject AnimeSongService AnimeSongService
@using GuessTheBeat.Components.Models;

@code {
    private List<AnimeNode> animeList = new List<AnimeNode>();
    private List<GuessTheBeat.Components.Services.AnimeInfo> aniList = new List<GuessTheBeat.Components.Services.AnimeInfo>();
    private List<int> idList = new List<int>();
    private bool isLoading = true;
    private string username; // Property to hold the username input

        //---------------MYANIMELIST-----------------
    private async Task FetchMalAnimeList()
    {
        if (string.IsNullOrWhiteSpace(username))
        {
            //handle empty input
            Console.WriteLine("Username cannot be empty.");
            return;
        }

        isLoading = true;

        try
        {
            animeList = await AnimeSongService.GetMediaListAsync(username);
        }
        catch (Exception ex)
        {
            // Handle the error
            Console.WriteLine($"Error fetching anime list: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    //---------------ANILIST-----------------
    private async Task FetchAniList()
    {
        if (string.IsNullOrWhiteSpace(username))
        {
            //Handle empty input
            Console.WriteLine("Username cannot be empty.");
            return;
        }

        isLoading = true;

        try
        {
            aniList = await AnimeSongService.GetAniListAsync(username);
        }
        catch (Exception ex)
        {
            //Handle the error
            Console.WriteLine($"Error fetching anime list: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

}

<div class="container mt-4">
    <h3 class="mb-4">Anime List</h3>

    <div class="form-group">
        <div class="col-2">
        <input type="text" class="form-control" @bind="username" placeholder="Enter username" />
        </div>
    </div>
    <div class="btn-group-2">
        <button class="btn btn-primary" @onclick="FetchMalAnimeList">MyAnimeList Account</button>
        <button class="btn btn-secondary" @onclick="FetchAniList">AniList Account</button>
    </div>

    <div class="col-3">
        @if (isLoading)
        {
            <div class="alert alert-info" role="alert">Loading...</div>
        }
        else if (animeList.Count != 0 && idList.Count == 0)
        {
            <div class="alert alert-success" role="alert">MyAnimeList account loaded!</div>
        }
        else if (animeList.Count == 0 && aniList.Count != 0)
        {
            <div class="alert alert-success" role="alert">AniList account loaded!</div>
        }
        else
        {
            <div class="alert alert-danger" role="alert">Could not find that account...</div>
        }
    </div>
</div>

<div>
@foreach (var anime in animeList)
{
    <tr>
        <td>@anime.Id</td>
    </tr>
}
@foreach (var anime in aniList)
{
    <tr>
        <td>@anime.Id</td>
    </tr>
}
</div>

